# generated by datamodel-codegen:
#   filename:  billing_cycle_started.json
#   timestamp: 2024-03-10T08:56:13+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Optional

from pydantic import BaseModel, Field


class EventTitleBillingCycleStarted(Enum):
    BILLING_CYCLE_STARTED = 'BILLING_CYCLE.STARTED'


class BillingCycleStatus(Enum):
    ACTIVE = 'ACTIVE'
    CLOSED = 'CLOSED'


class BillingCycleDataSchema(BaseModel):
    public_id: str = Field(..., title='Public Id')
    status: BillingCycleStatus
    started_at: datetime = Field(..., title='Started At')
    closed_at: Optional[datetime] = Field(None, title='Closed At')


class BillingProducer(Enum):
    BILLING_SERVICE = 'BILLING_SERVICE'


class BillingCycleStartedEventSchema(BaseModel):
    version: Optional[int] = Field(1, title='Version')
    produced_at: Optional[datetime] = Field(None, title='Produced At')
    title: Optional[EventTitleBillingCycleStarted] = 'BILLING_CYCLE.STARTED'
    data: BillingCycleDataSchema
    producer: Optional[BillingProducer] = 'BILLING_SERVICE'
