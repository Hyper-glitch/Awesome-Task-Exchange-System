# generated by datamodel-codegen:
#   filename:  task_assigned_event.json
#   timestamp: 2024-03-10T08:57:36+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Optional

from pydantic import BaseModel, Field


class EventTitleTaskAssigned(Enum):
    TASK_ASSIGNED = 'TASK.ASSIGNED'


class TaskNewAssigneeDataSchema(BaseModel):
    public_id: str = Field(..., title='Public Id')
    old_assignee_public_id: Optional[str] = Field(None, title='Old Assignee Public Id')
    new_assignee_public_id: str = Field(..., title='New Assignee Public Id')


class TaskProducer(Enum):
    TASK_SERVICE = 'TASK_SERVICE'


class TaskAssignedEventSchema(BaseModel):
    version: Optional[int] = Field(1, title='Version')
    produced_at: Optional[datetime] = Field(None, title='Produced At')
    title: Optional[EventTitleTaskAssigned] = 'TASK.ASSIGNED'
    data: TaskNewAssigneeDataSchema
    producer: Optional[TaskProducer] = 'TASK_SERVICE'
