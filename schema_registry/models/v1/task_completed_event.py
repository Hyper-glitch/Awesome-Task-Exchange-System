# generated by datamodel-codegen:
#   filename:  task_completed_event.json
#   timestamp: 2024-03-10T08:58:58+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Optional

from pydantic import BaseModel, Field


class EventTitleTaskCompleted(Enum):
    TASK_COMPLETED = 'TASK.COMPLETED'


class TaskStatus(Enum):
    OPEN = 'OPEN'
    DONE = 'DONE'


class TaskStatusChangedDataSchema(BaseModel):
    public_id: str = Field(..., title='Public Id')
    assignee_public_id: str = Field(..., title='Assignee Public Id')
    old_status: TaskStatus
    new_status: TaskStatus


class TaskProducer(Enum):
    TASK_SERVICE = 'TASK_SERVICE'


class TaskCompletedEventSchema(BaseModel):
    version: Optional[int] = Field(1, title='Version')
    produced_at: Optional[datetime] = Field(None, title='Produced At')
    title: Optional[EventTitleTaskCompleted] = 'TASK.COMPLETED'
    data: TaskStatusChangedDataSchema
    producer: Optional[TaskProducer] = 'TASK_SERVICE'
