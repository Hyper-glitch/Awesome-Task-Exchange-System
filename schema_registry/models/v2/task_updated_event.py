# generated by datamodel-codegen:
#   filename:  task_updated_event.json
#   timestamp: 2024-03-10T09:30:48+00:00

from __future__ import annotations

from enum import Enum
from typing import Optional

from pydantic import BaseModel, Field


class EventTitleTaskCreated(Enum):
    TASK_UPDATED = 'TASK.UPDATED'


class TaskStatus(Enum):
    OPEN = 'OPEN'
    DONE = 'DONE'


class UserInfoSchema(BaseModel):
    public_id: str = Field(..., title='Public Id')


class TaskDataUpdateSchema(BaseModel):
    public_id: str = Field(..., title='Public Id')
    title: Optional[str] = Field(None, title='Title')
    description: Optional[str] = Field(None, title='Description')
    status: Optional[TaskStatus] = None
    assignee: Optional[UserInfoSchema] = None
    jira_id: Optional[int] = Field(None, title='Jira Id')


class TaskProducer(Enum):
    TASK_SERVICE = 'TASK_SERVICE'


class TaskUpdatedEventSchema(BaseModel):
    title: Optional[EventTitleTaskCreated] = 'TASK.UPDATED'
    data: TaskDataUpdateSchema
    producer: Optional[TaskProducer] = 'TASK_SERVICE'
